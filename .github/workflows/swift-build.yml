# This is the GitHub actions workflow triggered on:
#  * all PRs on any branch, any fork
######################################################################
name: swift-build

on:
  # run on all pull requests on all branches
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: macos-latest

    steps:    
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: checkAndDetekt
      - uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            androidApp/build/reports
            shared/build/reports
            build/reports
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: apk_aar
          path: |
            **/*.apk
            **/*.aar
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/MNP_Cert.p12
          PP_PATH=$RUNNER_TEMP/MNP_Dist.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
              
      - name: Check out branch
        uses: actions/checkout@v2
      - name: Archive iOS app
        run: xcodebuild -workspace "iosApp/iosApp.xcworkspace" -configuration Release -scheme iosApp -derivedDataPath DeriveData  -archivePath $PWD/build/iosApp.archive clean archive | xcpretty
      - name: Export IPA
        run: xcodebuild -exportArchive -archivePath $PWD/build/iosApp.archive.xcarchive -exportOptionsPlist ./.github/workflows/exportOptions.plist -exportPath $PWD/build | xcpretty      
      #- name: Upload app to App Store Connect
      #  env:
      #    APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
      #    APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
      #  run: xcrun altool --upload-app --type ios --file $PWD/build/iosApp.ipa --username "$APP_STORE_CONNECT_USERNAME" --password "$APP_STORE_CONNECT_PASSWORD"
